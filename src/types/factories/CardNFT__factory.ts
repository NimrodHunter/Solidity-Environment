/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CardNFT, CardNFTInterface } from "../CardNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cardName",
        type: "string",
      },
      {
        internalType: "string",
        name: "cardSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160005561156f806100256000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634cd88b7611610097578063a22cb46511610066578063a22cb465146101f9578063b88d4fde1461020c578063c87b56dd1461021f578063e985e9c51461023257600080fd5b80634cd88b76146101aa5780636352211e146101bd57806370a08231146101d057806395d89b41146101f157600080fd5b8063095ea7b3116100d3578063095ea7b314610162578063158ef93e1461017757806323b872dd1461018457806342842e0e1461019757600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046110b2565b61026e565b60405190151581526020015b60405180910390f35b61012a6102c0565b6040516101199190611127565b61014a61014536600461113a565b610352565b6040516001600160a01b039091168152602001610119565b61017561017036600461116f565b6103ec565b005b60075461010d9060ff1681565b610175610192366004611199565b610502565b6101756101a5366004611199565b610589565b6101756101b8366004611281565b6105a4565b61014a6101cb36600461113a565b610635565b6101e36101de3660046112e5565b6106c0565b604051908152602001610119565b61012a61075a565b610175610207366004611300565b610769565b61017561021a36600461133c565b610778565b61012a61022d36600461113a565b610806565b61010d6102403660046113b8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061029f57506001600160e01b03198216635b5e139f60e01b145b806102ba57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102cf906113eb565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906113eb565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166103d05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006103f782610635565b9050806001600160a01b0316836001600160a01b031614156104655760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103c7565b336001600160a01b038216148061048157506104818133610240565b6104f35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103c7565b6104fd83836108fc565b505050565b61050c3382610977565b61057e5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016103c7565b6104fd838383610a6e565b6104fd83838360405180602001604052806000815250610778565b60075460ff16156105f75760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064016103c7565b815161060a906001906020850190611000565b50805161061e906002906020840190611000565b50506007805460ff19811660ff9091161517905550565b6000818152600360205260408120546001600160a01b0316806102ba5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016103c7565b60006001600160a01b03821661073e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016103c7565b506001600160a01b031660009081526004602052604090205490565b6060600280546102cf906113eb565b610774338383610c2f565b5050565b6107823383610977565b6107f45760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016103c7565b61080084848484610cfe565b50505050565b6000818152600360205260409020546060906001600160a01b03166108935760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016103c7565b60006108aa60408051602081019091526000815290565b905060008151116108ca57604051806020016040528060008152506108f5565b806108d484610d87565b6040516020016108e5929190611426565b6040516020818303038152906040525b9392505050565b6000818152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061093e82610635565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b03166109f05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c7565b60006109fb83610635565b9050806001600160a01b0316846001600160a01b03161480610a365750836001600160a01b0316610a2b84610352565b6001600160a01b0316145b80610a6657506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610a8182610635565b6001600160a01b031614610afd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016103c7565b6001600160a01b038216610b5f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c7565b610b6a6000826108fc565b6001600160a01b0383166000908152600460205260408120805460019290610b9390849061146b565b90915550506001600160a01b0382166000908152600460205260408120805460019290610bc1908490611482565b9091555050600081815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610c915760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103c7565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d09848484610a6e565b610d1584848484610e9d565b6108005760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103c7565b606081610dab5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610dd55780610dbf8161149a565b9150610dce9050600a836114cb565b9150610daf565b60008167ffffffffffffffff811115610df057610df06111d5565b6040519080825280601f01601f191660200182016040528015610e1a576020820181803683370190505b5090505b8415610a6657610e2f60018361146b565b9150610e3c600a866114df565b610e47906030611482565b60f81b818381518110610e5c57610e5c6114f3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610e96600a866114cb565b9450610e1e565b60006001600160a01b0384163b15610ff557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ee1903390899088908890600401611509565b602060405180830381600087803b158015610efb57600080fd5b505af1925050508015610f2b575060408051601f3d908101601f19168201909252610f2891810190611545565b60015b610fdb573d808015610f59576040519150601f19603f3d011682016040523d82523d6000602084013e610f5e565b606091505b508051610fd35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103c7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a66565b506001949350505050565b82805461100c906113eb565b90600052602060002090601f01602090048101928261102e5760008555611074565b82601f1061104757805160ff1916838001178555611074565b82800160010185558215611074579182015b82811115611074578251825591602001919060010190611059565b50611080929150611084565b5090565b5b808211156110805760008155600101611085565b6001600160e01b0319811681146110af57600080fd5b50565b6000602082840312156110c457600080fd5b81356108f581611099565b60005b838110156110ea5781810151838201526020016110d2565b838111156108005750506000910152565b600081518084526111138160208601602086016110cf565b601f01601f19169290920160200192915050565b6020815260006108f560208301846110fb565b60006020828403121561114c57600080fd5b5035919050565b80356001600160a01b038116811461116a57600080fd5b919050565b6000806040838503121561118257600080fd5b61118b83611153565b946020939093013593505050565b6000806000606084860312156111ae57600080fd5b6111b784611153565b92506111c560208501611153565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611206576112066111d5565b604051601f8501601f19908116603f0116810190828211818310171561122e5761122e6111d5565b8160405280935085815286868601111561124757600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261127257600080fd5b6108f5838335602085016111eb565b6000806040838503121561129457600080fd5b823567ffffffffffffffff808211156112ac57600080fd5b6112b886838701611261565b935060208501359150808211156112ce57600080fd5b506112db85828601611261565b9150509250929050565b6000602082840312156112f757600080fd5b6108f582611153565b6000806040838503121561131357600080fd5b61131c83611153565b91506020830135801515811461133157600080fd5b809150509250929050565b6000806000806080858703121561135257600080fd5b61135b85611153565b935061136960208601611153565b925060408501359150606085013567ffffffffffffffff81111561138c57600080fd5b8501601f8101871361139d57600080fd5b6113ac878235602084016111eb565b91505092959194509250565b600080604083850312156113cb57600080fd5b6113d483611153565b91506113e260208401611153565b90509250929050565b600181811c908216806113ff57607f821691505b6020821081141561142057634e487b7160e01b600052602260045260246000fd5b50919050565b600083516114388184602088016110cf565b83519083019061144c8183602088016110cf565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561147d5761147d611455565b500390565b6000821982111561149557611495611455565b500190565b60006000198214156114ae576114ae611455565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826114da576114da6114b5565b500490565b6000826114ee576114ee6114b5565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b0380871683528086166020840152508360408301526080606083015261153b60808301846110fb565b9695505050505050565b60006020828403121561155757600080fd5b81516108f58161109956fea164736f6c6343000809000a";

type CardNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CardNFT__factory extends ContractFactory {
  constructor(...args: CardNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CardNFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CardNFT> {
    return super.deploy(overrides || {}) as Promise<CardNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CardNFT {
    return super.attach(address) as CardNFT;
  }
  connect(signer: Signer): CardNFT__factory {
    return super.connect(signer) as CardNFT__factory;
  }
  static readonly contractName: "CardNFT";
  public readonly contractName: "CardNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardNFTInterface {
    return new utils.Interface(_abi) as CardNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CardNFT {
    return new Contract(address, _abi, signerOrProvider) as CardNFT;
  }
}
